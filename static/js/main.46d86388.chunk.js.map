{"version":3,"sources":["assets/image.jpg","utils/helperFunctions.js","components/navbar/Navbar.jsx","components/nfts/Nfts.jsx","components/footer/Footer.jsx","hooks/useNftContract.js","hooks/useContract.js","pages/Main/Main.jsx","pages/profile/Profile.jsx","pages/item/Item.jsx","pages/create/Create.jsx","App.js","index.js"],"names":["truncateAddress","address","slice","length","Menu","to","Navbar","useContractKit","destroy","connect","className","src","image","alt","onClick","type","placeholder","href","Nfts","title","nfts","loading","color","size","map","nft","tokenId","name","tokenPrice","Footer","useNftContract","abi","contractAddress","getConnectedKit","useState","contract","setContract","getContract","useCallback","kit","web3","eth","Contract","useEffect","useContract","AbstractionAbi","AbstractionAddress","Abstraction","Main","nftContract","setNfts","setLoading","loadNFTs","methods","fetchAllTokenItems","call","data","Promise","all","_token","tokenURI","tokenUri","axios","get","meta","ethers","utils","formatUnits","toString","Number","seller","itemName","description","itemDescription","owner","itemImage","items","console","log","e","Profile","getNfts","fetchMyTokens","tokenItems","_price","ownerOf","tokens","Item","id","useParams","tokenOwner","setTokenOwner","beneficiary","setBeneficiary","nftDetails","setNftDetails","performActions","defaultAccount","navigate","useNavigate","fetchNftData","_tokenOwner","purchaseNft","price","parseUnits","itemPrice","purchaseToken","send","from","value","alert","error","sellNft","sellToken","giftNft","giftToken","onChange","target","Create","setItemName","setItemDescription","setItemImage","setItemPrice","seed","setSeed","density","setDensity","randomness","setRandomness","client","ipfsHttpClient","uploadToIPFS","event","preventDefault","file","files","add","result","path","mintThenList","parseEther","mint","createNewNft","JSON","stringify","handleSubmit","Form","onSubmit","paperStyles","borderRadius","height","width","diameter","jsNumberForAddress","Label","Range","Group","controlId","Control","as","rows","Button","variant","targetNode","document","querySelector","htmlToImage","then","dataUrl","elem","createElement","setAttribute","body","appendChild","click","remove","catch","handleSave","disabled","App","element","ReactDOM","render","StrictMode","networks","Alfajores","network","NetworkNames","rpcUrl","graphQl","explorer","chainId","dapp","url","getElementById"],"mappings":"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","file":"static/js/main.46d86388.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/image.94e4b604.jpg\";","import {ERC20_DECIMALS} from \"./constants\";\r\n\r\n// format a wallet address\r\nexport const truncateAddress = (address) => {\r\n    if (!address) return\r\n    return address.slice(0, 5) + \"...\" + address.slice(address.length - 4, address.length);\r\n}\r\n\r\n// convert from big number\r\nexport const formatBigNumber = (num) => {\r\n    if (!num) return\r\n    return num.shiftedBy(-ERC20_DECIMALS).toFixed(2);\r\n}\r\n","import React, { useState } from \"react\";\r\nimport image from \"../../assets/image.jpg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\r\nimport { truncateAddress } from \"../../utils/helperFunctions\";\r\n\r\nimport \"./Navbar.css\";\r\n\r\nconst Menu = () => (\r\n  <>\r\n    <Link to=\"/\">\r\n      <p>Explore</p>{\" \"}\r\n    </Link>\r\n    <Link to=\"/profile\">\r\n      {\" \"}\r\n      <p>Profile</p>\r\n    </Link>\r\n  </>\r\n);\r\n\r\nconst Navbar = () => {\r\n  const { address, destroy, connect } = useContractKit();\r\n\r\n  return (\r\n    <div className=\"navbar\">\r\n      <div className=\"navbar-links\">\r\n        <div className=\"navbar-links_logo\">\r\n          <img src={image} alt=\"logo\" />\r\n          <Link to=\"/\">\r\n            <h1>Abstraction</h1>\r\n          </Link>\r\n        </div>\r\n        <div className=\"navbar-links_container\">\r\n          <Menu />\r\n          {address && (\r\n            <Link to=\"/\">\r\n              <p onClick={destroy}>Logout</p>\r\n            </Link>\r\n          )}\r\n          <input type=\"text\" placeholder=\"Search\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"navbar-sign\">\r\n        {!address ? (\r\n          <>\r\n            <button type=\"button\" className=\"secondary-btn\" onClick={connect}>\r\n              Connect wallet\r\n            </button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <a\r\n              href={`https://alfajores-blockscout.celo-testnet.org/address/${address}/transactions`}\r\n            >\r\n              <button type=\"button\" className=\"secondary-btn\">\r\n                {truncateAddress(address)}\r\n              </button>\r\n            </a>\r\n            <Link to=\"/create\">\r\n              <button type=\"button\" className=\"primary-btn\">\r\n                Mint new NFT\r\n              </button>\r\n            </Link>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport \"./nfts.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ClipLoader } from \"react-spinners\";\r\n\r\nconst Nfts = ({ title, nfts, loading }) => {\r\n  return (\r\n    <div className=\"nfts\">\r\n      <div className=\"nfts-container\">\r\n        <div className=\"nfts-container_text\">\r\n          {!loading && <h1>{nfts.length < 1 ? \"No NFTs Available\" : title}</h1>}\r\n        </div>\r\n        <div className=\"nfts-container_cards\">\r\n          {!loading ? (\r\n            nfts.map((nft) => (\r\n              <div className=\"nft-card\">\r\n                <Link to={`/nft/${nft.tokenId}`}>\r\n                  <div className=\"nft-card_top\">\r\n                    <img src={nft.image} alt=\"\" />\r\n                  </div>\r\n                  <div className=\"nft-card_bottom\">\r\n                    <p className=\"card-title\">{nft.name}</p>\r\n                    <p className=\"card-price\">{nft.tokenPrice} CELO</p>\r\n                  </div>\r\n                </Link>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <ClipLoader color={\"white\"} size={200} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nfts;\r\n","import React from \"react\";\r\nimport \"./footer.css\";\r\nimport image from \"../../assets/image.jpg\";\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer section__padding\">\r\n      <img src={image} alt=\"logo\" />\r\n      <p>Collect your abstract NFTs now!</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { useContract } from \"./useContract\";\r\nimport AbstractionAbi from \"../contracts/Abstraction.json\";\r\nimport AbstractionAddress from \"../contracts/Abstraction-address.json\";\r\n\r\nexport const useNftContract = () =>{\r\n return useContract( AbstractionAbi.abi, AbstractionAddress.Abstraction);\r\n}\r\n","import { useState, useEffect, useCallback } from 'react';\r\nimport { useContractKit } from '@celo-tools/use-contractkit';\r\n\r\nexport const useContract = (abi, contractAddress) => {\r\n  const { getConnectedKit, address } = useContractKit();\r\n  const [contract, setContract] = useState(null);\r\n\r\n  const getContract = useCallback(async () => {\r\n    const kit = await getConnectedKit();\r\n\r\n    setContract(new kit.web3.eth.Contract(abi, contractAddress));\r\n  }, [getConnectedKit, abi, contractAddress]);\r\n\r\n  useEffect(() => {\r\n    if (address) getContract();\r\n  }, [address, getContract]);\r\n\r\n  return contract;\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Nfts } from \"../../components\";\r\nimport { useNftContract } from \"../../hooks/useNftContract\";\r\nimport axios from \"axios\";\r\nimport { ethers } from \"ethers\";\r\n\r\nconst Main = () => {\r\n  const nftContract = useNftContract();\r\n\r\n  const [nfts, setNfts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (nftContract) loadNFTs();\r\n  }, [nftContract]);\r\n\r\n  // load all market NFTs from contract\r\n  const loadNFTs = async () => {\r\n    try {\r\n      const data = await nftContract.methods.fetchAllTokenItems().call();\r\n      const items = await Promise.all(\r\n        data.map(async (_token) => {\r\n          const tokenUri = await nftContract.methods\r\n            .tokenURI(_token.tokenId)\r\n            .call();\r\n          const meta = await axios.get(tokenUri);\r\n          let tokenPrice = ethers.utils.formatUnits(\r\n            _token.tokenPrice.toString(),\r\n            \"ether\"\r\n          );\r\n          return {\r\n            tokenId: Number(_token.tokenId),\r\n            tokenPrice,\r\n            seller: _token.seller,\r\n            name: meta.data.itemName,\r\n            description: meta.data.itemDescription,\r\n            owner: _token.owner,\r\n            image: meta.data.itemImage,\r\n          };\r\n        })\r\n      );\r\n      setNfts(items);\r\n      setLoading(false);\r\n    } catch (e) {\r\n      console.log({ e });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <Nfts nfts={nfts} title=\"All NFTs\" loading={loading} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./profile.css\";\r\nimport Nfts from \"../../components/nfts/Nfts\";\r\nimport { useNftContract } from \"../../hooks/useNftContract\";\r\nimport axios from \"axios\";\r\nimport { ethers } from \"ethers\";\r\n\r\nconst Profile = () => {\r\n  const nftContract = useNftContract();\r\n\r\n  const [nfts, setNfts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (nftContract) {\r\n      getNfts();\r\n    }\r\n  }, [nftContract]);\r\n\r\n  // get all user's NFTs from contract\r\n  const getNfts = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const data = await nftContract.methods.fetchMyTokens().call();\r\n      const tokens = await Promise.all(\r\n        data.map(async (_token) => {\r\n          const tokenURI = await nftContract.methods.tokenURI(_token).call();\r\n          let _price = await nftContract.methods.tokenItems(_token).call();\r\n          const owner = await nftContract.methods.ownerOf(_token).call();\r\n          const meta = await axios.get(tokenURI);\r\n          let tokenPrice = ethers.utils.formatUnits(_price.tokenPrice.toString(), \"ether\");\r\n          return {\r\n            tokenId: Number(_token),\r\n            tokenPrice,\r\n            owner,\r\n            name: meta.data.itemName,\r\n            image: meta.data.itemImage,\r\n            description: meta.data.itemDescription,\r\n          };\r\n        })\r\n      );\r\n\r\n      setNfts(tokens);\r\n      console.log(tokens)\r\n    } catch (e) {\r\n      console.log({ e });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"profile\">\r\n      <Nfts nfts={nfts} loading={loading} title=\"Your NFTs\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { ethers } from \"ethers\";\r\nimport { useParams } from \"react-router\";\r\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\r\nimport { useNftContract } from \"../../hooks/useNftContract\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport \"./item.css\";\r\n\r\nconst Item = () => {\r\n  const { id } = useParams();\r\n  const [tokenOwner, setTokenOwner] = useState();\r\n  const [beneficiary, setBeneficiary] = useState();\r\n  const nftContract = useNftContract();\r\n  const [nftDetails, setNftDetails] = useState({});\r\n  const { address, performActions, kit } = useContractKit();\r\n  const { defaultAccount } = kit;\r\n\r\n  const navigate = useNavigate();\r\n  useEffect(() => {\r\n    if (nftContract) fetchNftData();\r\n  }, [nftContract]);\r\n\r\n  const fetchNftData = async () => {\r\n    const tokenUri = await nftContract.methods.tokenURI(id).call();\r\n    const _tokenOwner = await nftContract.methods.ownerOf(id).call();\r\n    const meta = await axios.get(tokenUri);\r\n    setNftDetails(meta.data);\r\n    setTokenOwner(_tokenOwner);\r\n  };\r\n\r\n  // purchase an NFT\r\n  const purchaseNft = async () => {\r\n    try {\r\n      await performActions(async (kit) => {\r\n        const { defaultAccount } = kit;\r\n        const price = ethers.utils\r\n          .parseUnits(nftDetails.itemPrice, \"ether\")\r\n          .toString();\r\n        const transaction = await nftContract.methods.purchaseToken(id).send({\r\n          from: defaultAccount,\r\n          value: price,\r\n        });\r\n        alert(`You have successfully purchased this NFT!`);\r\n        navigate(`/profile`);\r\n      });\r\n    } catch (error) {\r\n      console.log({ error });\r\n    }\r\n  };\r\n\r\n  // sell an NFT\r\n  const sellNft = async () => {\r\n    try {\r\n      await performActions(async (kit) => {\r\n        const _price = ethers.utils\r\n          .parseUnits(nftDetails.itemPrice, \"ether\")\r\n          .toString();\r\n        await nftContract.methods\r\n          .sellToken(id, _price)\r\n          .send({ from: defaultAccount });\r\n        alert(`You have successfully sold an NFT!`);\r\n        navigate(`/`);\r\n      });\r\n    } catch (e) {\r\n      console.log(\"Error while trying to sell NFT: \" + e);\r\n    }\r\n  };\r\n\r\n  // gift and NFT to another user\r\n  const giftNft = async () => {\r\n    if (!beneficiary) {\r\n      alert(\"Please enter a valid address\");\r\n      return;\r\n    }\r\n    try {\r\n      await performActions(async (kit) => {\r\n        await nftContract.methods\r\n          .giftToken(id, beneficiary)\r\n          .send({ from: defaultAccount });\r\n      });\r\n    } catch (e) {\r\n      console.log(\"Error while trying to gift NFT: \" + e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"nft_details\">\r\n      <div className=\"nft_details-img\">\r\n        <img src={nftDetails.itemImage} alt=\"nft-details-image\" />\r\n      </div>\r\n      <div className=\"nft_details-details\">\r\n        <div className=\"details-title details-row\">\r\n          <div className=\"details-label\">Name</div>{\" \"}\r\n          <div className=\"details-content\">{nftDetails.itemName}</div>\r\n        </div>\r\n        <div className=\"details-description details-row\">\r\n          <div className=\"details-label\">Description</div>{\" \"}\r\n          <div className=\"details-content\">{nftDetails.itemDescription}</div>\r\n        </div>\r\n        <div className=\"details-price details-row\">\r\n          <div className=\"details-label\">Price</div>{\" \"}\r\n          <div className=\"details-content\">{nftDetails.itemPrice} CELO</div>\r\n        </div>\r\n        <div className=\"details-bottom\">\r\n          {tokenOwner == defaultAccount ? (\r\n            <>\r\n              <div className=\"details-buy_btn\" onClick={() => sellNft()}>\r\n                Sell NFT\r\n              </div>\r\n              <div className=\"details-gift_nft\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"to...\"\r\n                  onChange={(e) => setBeneficiary(e.target.value)}\r\n                />{\" \"}\r\n                <span onClick={() => giftNft()}>Gift NFT</span>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <div className=\"details-buy_btn\" onClick={purchaseNft}>\r\n              Buy NFT\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n","import \"./create.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { create as ipfsHttpClient } from \"ipfs-http-client\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useNftContract } from \"../../hooks/useNftContract\";\r\nimport { BigNumber, ethers } from \"ethers\";\r\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Jazzicon, { jsNumberForAddress } from \"react-jazzicon\";\r\nimport * as htmlToImage from \"html-to-image\";\r\n\r\nconst Create = () => {\r\n  const { address, connect, performActions } = useContractKit();\r\n  const navigate = useNavigate();\r\n  useEffect(() => {\r\n    if (!address) {\r\n      (async () => {\r\n        await connect();\r\n      })();\r\n    }\r\n  }, [address, connect]);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [itemName, setItemName] = useState(null);\r\n  const [itemDescription, setItemDescription] = useState(null);\r\n  const [itemImage, setItemImage] = useState(null);\r\n  const [itemPrice, setItemPrice] = useState(null);\r\n  const [seed, setSeed] = useState(0);\r\n  const [density, setDensity] = useState(0);\r\n  const [randomness, setRandomness] = useState(0);\r\n\r\n  const nftContract = useNftContract();\r\n  const client = ipfsHttpClient(\"https://ipfs.infura.io:5001/api/v0\");\r\n\r\n  const isFormFiled = () => {\r\n    if (\r\n      itemImage === null ||\r\n      itemPrice === null ||\r\n      itemName === null ||\r\n      itemDescription === null\r\n    ) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  // upload image to IPFS\r\n  const uploadToIPFS = async (event) => {\r\n    event.preventDefault();\r\n    const file = event.target.files[0];\r\n    if (typeof file !== \"undefined\") {\r\n      try {\r\n        const result = await client.add(file);\r\n        console.log(result);\r\n        setItemImage(`https://ipfs.infura.io/ipfs/${result.path}`);\r\n      } catch (error) {\r\n        console.log(\"ipfs image upload error: \", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Mint and NFT then send to market\r\n  const mintThenList = async (result, defaultAccount) => {\r\n    const tokenUri = `https://ipfs.infura.io/ipfs/${result.path}`;\r\n    const tokenPrice = ethers.utils.parseEther(itemPrice.toString());\r\n    const tx = await nftContract.methods.mint(tokenUri, tokenPrice).send({\r\n      from: defaultAccount,\r\n    });\r\n    alert(\"Successfully minted a new NFT\");\r\n    navigate(`/`);\r\n  };\r\n\r\n  // Create a new NFT\r\n  const createNewNft = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await performActions(async (kit) => {\r\n        const { defaultAccount } = kit;\r\n        if (!itemImage || !itemPrice || !itemName || !itemDescription) return;\r\n        setLoading(true);\r\n        const result = await client.add(\r\n          JSON.stringify({\r\n            itemImage,\r\n            itemPrice,\r\n            itemName,\r\n            itemDescription,\r\n            owner: address,\r\n          })\r\n        );\r\n        await mintThenList(result, defaultAccount);\r\n      });\r\n    } catch (error) {\r\n      console.log(\"ipfs uri upload error: \", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Save image to file storage\r\n  const handleSave = () => {\r\n    const targetNode = document.querySelector(\".paper\");\r\n    htmlToImage\r\n      .toPng(targetNode)\r\n      .then((dataUrl) => {\r\n        const elem = document.createElement(\"a\");\r\n        elem.setAttribute(\"href\", dataUrl);\r\n        elem.setAttribute(\"download\", \"latest_nft\");\r\n        document.body.appendChild(elem);\r\n        elem.click();\r\n        elem.remove();\r\n      })\r\n      .catch(function (error) {\r\n        console.error(\"oops, something went wrong\");\r\n      });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    await createNewNft(e);\r\n  };\r\n\r\n  return (\r\n    <div className=\"create\">\r\n      <div className=\"create_form\">Create New NFT</div>\r\n      <div className=\"form-new\">\r\n        <div className=\"form-form\">\r\n          <Form onSubmit={(e) => handleSubmit(e)}>\r\n            <div className=\"create-canvas\">\r\n              <Jazzicon\r\n                paperStyles={{\r\n                  borderRadius: \"2px\",\r\n                  height: \"100%\",\r\n                  width: \"95%\",\r\n                }}\r\n                diameter={400}\r\n                seed={jsNumberForAddress(\r\n                  (seed + density + randomness).toString()\r\n                )}\r\n              />\r\n            </div>\r\n            <Form.Label>Seed</Form.Label>\r\n            <Form.Range onChange={(e) => setSeed(e.target.value)} />{\" \"}\r\n            <Form.Label>Density</Form.Label>\r\n            <Form.Range onChange={(e) => setDensity(e.target.value)} />{\" \"}\r\n            <Form.Label>Randomness</Form.Label>\r\n            <Form.Range onChange={(e) => setRandomness(e.target.value)} />\r\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Label>Item Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                onChange={(e) => setItemName(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group\r\n              className=\"mb-3\"\r\n              controlId=\"exampleForm.ControlTextarea3\"\r\n            >\r\n              <Form.Label>Item Description</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                rows={3}\r\n                onChange={(e) => setItemDescription(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput4\">\r\n              <Form.Label>Price</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                onChange={(e) => setItemPrice(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Label>Upload image you just saved</Form.Label>\r\n              <Form.Control type=\"file\" onChange={uploadToIPFS} />\r\n            </Form.Group>\r\n            <Button variant=\"dark\" type=\"button\" onClick={() => navigate(\"/\")}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"dark\" type=\"button\" onClick={() => handleSave()}>\r\n              Save\r\n            </Button>\r\n            <Button disabled={!isFormFiled()} variant=\"dark\" type=\"submit\">\r\n              Create\r\n            </Button>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Create;\r\n","import \"./App.css\";\r\nimport { Navbar, Footer } from \"./components\";\r\nimport { Main, Profile, Item, Create } from \"./pages\";\r\nimport { HashRouter as Router, Routes, Route } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app__app\">\r\n      <Router>\r\n        <Navbar />\r\n        <Routes>\r\n          <Route path=\"/\" element={<Main />} />\r\n          <Route path=\"nft/:id\" element={<Item />} />\r\n          <Route path=\"/create\" element={<Create />} />\r\n          <Route path=\"/profile\" element={<Profile />} />\r\n        </Routes>\r\n        <Footer />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {\r\n  ContractKitProvider,\r\n  Alfajores,\r\n  NetworkNames,\r\n} from \"@celo-tools/use-contractkit\";\r\nimport App from \"./App\";\r\nimport \"@celo-tools/use-contractkit/lib/styles.css\";\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ContractKitProvider\r\n      networks={[Alfajores]}\r\n      network={{\r\n        name: NetworkNames.Alfajores,\r\n        rpcUrl: \"https://alfajores-forno.celo-testnet.org\",\r\n        graphQl: \"https://alfajores-blockscout.celo-testnet.org/graphiql\",\r\n        explorer: \"https://alfajores-blockscout.celo-testnet.org\",\r\n        chainId: 44787,\r\n      }}\r\n      dapp={{\r\n        name: \"Abstraction\",\r\n        description: \"A collection of abstract NFT images\",\r\n        url: \"https://www.example.com\",\r\n      }}\r\n    >\r\n      <App />\r\n    </ContractKitProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}